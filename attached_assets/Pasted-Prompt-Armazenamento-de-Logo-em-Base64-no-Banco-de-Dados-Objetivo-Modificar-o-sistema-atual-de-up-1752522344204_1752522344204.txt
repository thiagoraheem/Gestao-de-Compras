Prompt: Armazenamento de Logo em Base64 no Banco de Dados
Objetivo
Modificar o sistema atual de upload de logos para armazenar a imagem diretamente no banco de dados em formato base64, eliminando a dependência de arquivos físicos no servidor e garantindo que a logo seja sempre exibida corretamente tanto em desenvolvimento quanto em produção.

Problemas Atuais Identificados
Problema em Produção: A logomarca não aparece em produção mesmo com upload correto
Dependência de Arquivos: Sistema atual depende de arquivos físicos no diretório /uploads/company_logos/
Inconsistência: URLs de logos podem quebrar em diferentes ambientes
Implementação Necessária
1. Modificação do Schema (shared/schema.ts)
Alterar o campo logoUrl na tabela companies para logoBase64:

// Alterar de:
logoUrl: text("logo_url")
// Para:
logoBase64: text("logo_base64") // Armazenará a string base64 completa
2. Backend - Storage (server/storage.ts)
Modificar métodos relacionados à empresa para trabalhar com base64:

// Nos métodos de empresa, trocar logoUrl por logoBase64
// Garantir que o campo seja tratado como string base64
3. Backend - Routes (server/routes.ts)
Modificar o endpoint de upload de logo:

// Substituir o endpoint atual:
app.post("/api/companies/:id/upload-logo", ...)
// Por um que:
// 1. Receba o arquivo
// 2. Converta para base64
// 3. Salve direto no banco
// 4. Remova dependência de arquivos físicos
4. Frontend - LogoUpload Component (client/src/components/logo-upload.tsx)
Modificar o componente para:

// 1. Converter arquivo para base64 no frontend
// 2. Enviar base64 via JSON (não FormData)
// 3. Exibir preview usando base64
// 4. Remover lógica de URLs de arquivo
5. PDF Service (server/pdf-service.ts)
Modificar para usar base64 diretamente:

// Já está parcialmente implementado, mas garantir que:
// 1. Use company.logoBase64 em vez de logoUrl
// 2. Não precise converter arquivo para base64
// 3. Use diretamente o base64 do banco
6. Migration Script
Criar migração para:

-- 1. Adicionar nova coluna logo_base64
-- 2. Converter logos existentes para base64 (se houver)
-- 3. Remover coluna logo_url antiga
-- 4. Limpar diretório uploads/company_logos
Benefícios da Implementação
Vantagens
✅ Portabilidade Total: Logo sempre disponível independente do ambiente
✅ Sem Dependência Externa: Não precisa de diretórios de upload
✅ Backup Completo: Logo incluída nos backups do banco
✅ Funcionamento em Produção: Resolve o problema atual de produção
✅ Simplicidade: Uma única fonte de verdade no banco
Considerações
⚠️ Tamanho do Banco: Base64 ocupa ~33% mais espaço que arquivo binário
⚠️ Limite de Tamanho: Manter limite de 5MB para evitar base64 muito grandes
⚠️ Performance: Consultas podem ser ligeiramente mais lentas
Estrutura de Implementação
Ordem de Implementação
Schema: Adicionar campo logoBase64
Migration: Migrar dados existentes
Backend Storage: Atualizar métodos CRUD
Backend Routes: Modificar endpoint de upload
Frontend Component: Atualizar LogoUpload
PDF Service: Usar base64 diretamente
Cleanup: Remover código e arquivos obsoletos
Validações Necessárias
Validar formato base64 válido
Manter limite de 5MB por imagem
Validar tipos MIME (PNG, JPG, JPEG)
Sanitizar dados base64
Resultado Esperado
Após a implementação:

Logo aparecerá corretamente em todas as telas
PDF funcionará em produção com logo
Sistema mais robusto e portável
Eliminação do problema atual de produção
Implemente esta funcionalidade seguindo a ordem sugerida e mantendo compatibilidade com o sistema existente durante a transição
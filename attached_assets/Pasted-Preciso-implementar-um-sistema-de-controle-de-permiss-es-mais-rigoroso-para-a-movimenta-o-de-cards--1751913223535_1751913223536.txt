Preciso implementar um sistema de controle de permissões mais rigoroso para a movimentação de cards no Kanban Board do sistema de compras. As regras são:

1. Restrições de Movimentação por Perfil:

Cards na fase "Aprovação A1" só podem ser movidos por usuários com isApproverA1: true
Cards na fase "Aprovação A2" só podem ser movidos por usuários com isApproverA2: true
Usuários sem a permissão adequada não devem conseguir arrastar os cards dessas fases
2. Aprovação Automática por Movimentação:

Quando um usuário com permissão A1 move um card de "Aprovação A1" para "Cotação", o sistema deve:

Automaticamente marcar a solicitação como aprovada no nível A1
Registrar o ID do usuário que fez a movimentação como approverA1Id
Salvar a data/hora da aprovação em approvalDateA1
Criar entrada no histórico de aprovações
Quando um usuário com permissão A2 move um card de "Aprovação A2" para "Pedido de Compra", o sistema deve:

Automaticamente marcar a solicitação como aprovada no nível A2
Registrar o ID do usuário que fez a movimentação como approverA2Id
Criar entrada no histórico de aprovações
3. Visualização Restrita com Modal Informativo:

Quando um usuário SEM permissão A1 clica em um card na fase "Aprovação A1":

Abrir modal mostrando todas as informações da solicitação (somente leitura)
OCULTAR completamente os botões "Aprovar" e "Reprovar"
Exibir mensagem clara: "Você não possui permissão de aprovação nível A1"
Permitir fechar o modal normalmente
Mesmo comportamento para usuários SEM permissão A2 na fase "Aprovação A2"

4. Implementações Técnicas Necessárias:

No Frontend:

Modificar KanbanBoard.tsx para verificar permissões antes de permitir drag/drop
Atualizar PurchaseCard.tsx para verificar permissões antes de tornar o card arrastável
Modificar ApprovalA1Phase.tsx e ApprovalA2Phase.tsx para modo somente leitura quando sem permissão
Implementar feedback visual (cursor "not-allowed", opacidade reduzida) para cards sem permissão
No Backend:

Modificar a rota PATCH /api/purchase-requests/:id/update-phase para:
Verificar permissões do usuário antes de permitir mudança de fase
Implementar lógica de aprovação automática por movimentação
Criar entradas no histórico de aprovações automaticamente
Retornar erro 403 se usuário não tiver permissão
5. Validações de Segurança:

Verificar permissões tanto no frontend (UX) quanto no backend (segurança)
Impedir movimentações não autorizadas via API
Manter logs de todas as tentativas de movimentação
6. Estados dos Cards:

Cards sem permissão de movimentação devem ter visual diferenciado
Manter funcionalidade de visualização para todos os usuários
Distinguir claramente entre "pode ver" e "pode modificar"
O sistema deve manter a experiência do usuário fluida para quem tem permissões, enquanto bloqueia adequadamente ações não autorizadas e fornece feedback claro sobre limitações de acesso.
"Olá, gostaria de criar uma nova tela no meu aplicativo que permita aos usuários atualizar o status da cotação de um fornecedor e inserir os valores da proposta.

Aqui estão os componentes e a lógica que preciso:

Adicionar dois campos: um para totalValue (valor total) e outro para observations (observações).
Usar a mutação selectSupplierMutation já existente para enviar esses dados para o endpoint POST /api/quotations/:quotationId/update-supplier-quotation.
Incorporar feedback para o usuário utilizando o toast para indicar se a atualização foi bem-sucedida ou se ocorreu um erro.
O código inicial pode ser semelhante a este:

import { useState } from "react";
import { useMutation, useQueryClient } from "@tanstack/react-query";
import { Button, Input, Textarea } from "@/components/ui"; // Certifique-se de importar os componentes corretos
import { useToast } from "@/hooks/use-toast";
import apiRequest from "@/utils/apiRequest";
interface SupplierComparisonProps {
  quotationId: number;
  onClose: () => void;
  onComplete: () => void;
}
export default function SupplierComparison({ quotationId, onClose, onComplete }: SupplierComparisonProps) {
  const [totalValue, setTotalValue] = useState("");
  const [observations, setObservations] = useState("");
  const { toast } = useToast();
  const queryClient = useQueryClient();
  const updateSupplierQuotation = async () => {
    const response = await apiRequest("POST", `/api/quotations/${quotationId}/update-supplier-quotation`, {
      supplierId: selectedSupplierId, // O ID do fornecedor deve ser gerenciado
      totalValue,
      observations,
    });
    if (response.ok) {
      toast({ title: "Cotação atualizada com sucesso!" });
      onComplete();
    } else {
      toast({ title: "Erro", description: "Não foi possível atualizar a cotação.", variant: "destructive" });
    }
  };
  return (
    <>
      <Textarea
        value={observations}
        onChange={(e) => setObservations(e.target.value)}
        placeholder="Insira observações"
      />
      <Input
        type="text"
        value={totalValue}
        onChange={(e) => setTotalValue(e.target.value)}
        placeholder="Informe o valor total"
      />
      <Button onClick={updateSupplierQuotation}>Atualizar Cotação</Button>
    </>
  );
}
Por favor, ajude-me a implementar essa tela no meu código!"